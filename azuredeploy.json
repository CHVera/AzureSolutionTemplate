{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "solutionPrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix used in resource names. Should be unique enough since this ends up being used also in domain names."
            }
        },
        "loriotAppId": {
            "type": "string",
			"defaultValue": "",
            "metadata": {
                "description": "The LORIOT App Id that can be found in the LORIOT portal."
            }
        },
        "loriotAppToken": {
            "type": "string",
			"defaultValue": "",
            "metadata": {
                "description": "The LORIOT App Token that can be found in the LORIOT portal under the app's security page."
            }
        },
        "loriotApiUrl": {
            "type": "string",
			"defaultValue": "",
            "metadata": {
                "description": "The LORIOT Network Server Management API URL matching to the location of the app."
            }
        }
    },
    "variables": {
        "apiVersion": "2017-04-01",
        "location": "[resourceGroup().location]",
        "iotHubName": "[concat(parameters('solutionPrefix'), 'hub')]",
        "iotHubOwnerPolicyName": "iothubowner",
        "deviceLifecycleServiceBusNamespaceName": "[concat(parameters('solutionPrefix'), 'bus')]",
        "deviceLifecycleQueueName": "lifecycle-queue",
        "deviceLifecycleImportTimer": "0 */5 * * * *",
        "iotHubConsumerGroupName": "router",
        "authorizationRulesListenName": "Listen",
        "authorizationRulesSendName": "Send",
        "functionAppName": "[concat(parameters('solutionPrefix'), 'function')]",
        "hostingPlanName": "[concat(parameters('solutionPrefix'), 'plan')]",
        "storageAccountName": "[concat(parameters('solutionPrefix'), 'storage')]",
        "storageAccountId": "[concat(resourceGroup().id, '/providers/', 'Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "storageAccountType": "Standard_LRS",
        "gitRepoUrl": "https://github.com/loriot/AzureSolutionTemplate.git",
        "gitBranch": "master"
    },
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "name": "[variables('iotHubName')]",
            "apiVersion": "2017-07-01",
            "location": "[variables('location')]",
            "properties": {
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [
                            {
                                "connectionString": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/queues/authorizationRules',variables('deviceLifecycleServiceBusNamespaceName'),variables('deviceLifecycleQueueName'),variables('authorizationRulesSendName')),'2015-08-01').primaryConnectionString]",
                                "name": "DeviceLifecycleQueue"
                            }
                        ]
                    },
                    "routes": [
                        {
                            "name": "DeviceLifecycleRoute",
                            "source": "DeviceLifecycleEvents",
                            "endpointNames": [
                                "DeviceLifecycleQueue"
                            ],
                            "isEnabled": true
                        }
                    ],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/queues/authorizationRules', variables('deviceLifecycleServiceBusNamespaceName'), variables('deviceLifecycleQueueName'), variables('authorizationRulesSendName'))]"
            ]
        },
        {
            "apiVersion": "2016-02-03",
            "dependsOn": [
                "[concat('Microsoft.Devices/iothubs/', variables('iotHubName'))]"
            ],
            "name": "[concat(variables('iotHubName'), '/events/', variables('iotHubConsumerGroupName'))]",
            "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups"
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {},
            "kind": "Messaging",
            "name": "[variables('deviceLifecycleServiceBusNamespaceName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]"
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "name": "[concat(variables('deviceLifecycleServiceBusNamespaceName'), '/', variables('deviceLifecycleQueueName'))]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "properties": {},
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('deviceLifecycleServiceBusNamespaceName'))]"
            ]
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "name": "[concat(variables('deviceLifecycleServiceBusNamespaceName'), '/', variables('authorizationRulesListenName'))]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "rights": [
                    "Listen"
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('deviceLifecycleServiceBusNamespaceName'))]"
            ]
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues/authorizationRules",
            "name": "[concat(variables('deviceLifecycleServiceBusNamespaceName'), '/', variables('deviceLifecycleQueueName'), '/', variables('authorizationRulesSendName'))]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "rights": [
                    "Send"
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('deviceLifecycleServiceBusNamespaceName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/queues', variables('deviceLifecycleServiceBusNamespaceName'), variables('deviceLifecycleQueueName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Devices/iothubs/', variables('iotHubName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "[variables('gitRepoUrl')]",
                        "branch": "[variables('gitBranch')]",
                        "IsManualIntegration": true
                    }
                }
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "6.5.0"
                        },
                        {
                            "name": "LORIOT_APP_TOKEN",
                            "value": "[parameters('loriotAppToken')]"
                        },
                        {
                            "name": "LORIOT_APP_ID",
                            "value": "[parameters('loriotAppId')]"
                        },
                        {
                            "name": "LORIOT_API_URL",
                            "value": "[parameters('loriotApiUrl')]"
                        },
                        {
                            "name": "IOT_HUB_OWNER_CONNECTION_STRING",
                            "value": "[concat('HostName=', variables('iotHubName'), '.azure-devices.net;SharedAccessKeyName=', variables('iotHubOwnerPolicyName'), ';SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys', variables('iotHubName'), variables('iotHubOwnerPolicyName')), '2017-01-19').primaryKey)]"
                        },
                        {
                            "name": "DEVICE_LIFECYCLE_IMPORT_TIMER",
                            "value": "[variables('deviceLifecycleImportTimer')]"
                        },
                        {
                            "name": "DEVICE_LIFECYCLE_QUEUE_NAME",
                            "value": "[variables('deviceLifecycleQueueName')]"
                        },
                        {
                            "name": "DEVICE_LIFECYCLE_CONNECTION_STRING",
                            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules',variables('deviceLifecycleServiceBusNamespaceName'),variables('authorizationRulesListenName')),'2015-08-01').primaryConnectionString]"
                        }
                    ]
                }
            }
        }
    ]
}